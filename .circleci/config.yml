aliases:
  - &configure-variables
    name: Configure local build environment
    command: |
      touch $BASH_ENV
      echo 'source build-env' >> $BASH_ENV
      echo 'PATH="/tmp/terminus/vendor/bin:$PATH"' >> $BASH_ENV

defaults: &defaults
  working_directory: /home/agent/build
  docker:
    - image: seandietrich/ci-agent:php
  environment:
     BASH_ENV: /home/agent/.bashrc  # Tell CircleCI where to read the shared build environment variables from

version: 2

jobs:
  sandbox:
    <<: *defaults
    steps:
      - checkout
      - run: *configure-variables
      - run:
          name: Sandbox provisioning
          command: |
            slack "Started sandbox build for branch *${GIT_BRANCH_NAME}*"
            echo "${DOCKSAL_HOST_IP} ${DOCKSAL_HOST}" | sudo tee -a /etc/hosts
            build-notify pending
            build-init
            ssh docker-host "cd $REMOTE_BUILD_DIR && echo TERMINUS_TOKEN=${TERMINUS_TOKEN} | tee -a .docksal/docksal-local.env"
            ssh docker-host "cd $REMOTE_BUILD_DIR && fin init"
            slack "Completed sandbox build for branch *${GIT_BRANCH_NAME}*:\n<http://${DOMAIN}|http://${DOMAIN}>"
            if [[ $? == 0 ]]; then build-notify success; else build-notify failure; fi

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run: *configure-variables
      - run:
          name: Installing Terminus
          command: |
            curl -O https://raw.githubusercontent.com/pantheon-systems/terminus-installer/master/builds/installer.phar
            mkdir -p /tmp/terminus
            php installer.phar install --install-dir=/tmp/terminus
      - run:
          name: Authenticating Pantheon Account
          command: |
            terminus auth:login --machine-token=${TERMINUS_TOKEN}
            terminus whoami
      - run:
          name: Deploying to provider
          command: |
            MODE=$(terminus env:info ${PANTHEON_SITE}.dev --field="Connection Mode")
            #if [ $MODE = 'sftp' ]; then
            #  COMMIT=$(terminus env:diffstat ${PANTHEON_SITE}.dev --field="File" | wc -l)
            #  if [ $COMMIT -gt 0 ]; then
            #    COMMIT_MSG=${COMMIT_MSG:-"Autocommitting code from CircleCI"}
            #    terminus env:commit ${PANTHEON_SITE}.dev --message="${COMMIT_MSG}"
            #  fi
            #  terminus connection:set ${PANTHEON_SITE}.dev git
            #fi
            if [ $MODE = 'git' ]; then
              echo "Getting GIT Url for Pantheon Site ${PANTHEON_SITE}..."
              URL=$(terminus connection:info ${PANTHEON_SITE}.dev --field="Git URL")
              echo "Cloning Site..."
              git clone $URL /tmp/${PANTHEON_SITE}
              cd /tmp/${PANTHEON_SITE}
              git remote add remote $GIT_REPO_URL
              echo "Merging code into Master"
              git fetch remote
              git merge -X theirs --no-ff -q --no-edit --commit -m 'Merged Master branch' -X theirs remote/master
              git push origin master
            else
              echo "Site not in GIT mode."
              exit 1
            fi

workflows:
  version: 2
  building:
    jobs:
      - sandbox:
          filters:
            branches:
              ignore: master
          context: org-global
  deployment:
    jobs:
      - deploy:
          filters:
            branches:
              only: master
          context: org-global